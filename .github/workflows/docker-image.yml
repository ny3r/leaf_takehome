name: Lint and Build Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo 'export PATH="$HOME/.local/bin:$PATH"' >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Install dependencies with Poetry
        run: |
          poetry install

      - name: Run Linting Script
        run: |
          pwd
          ls -lrt
          chmod +x ./bin/lint
          ./bin/lint

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint  # This ensures the build only runs if linting passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ll_takehome:latest

      - name: Verify Docker Image
        run: |
          docker run -e SECURE_WEATHER_API_KEY=${{ secrets.SECURE_WEATHER_API_KEY }} -d --name roman2 ${{ secrets.DOCKER_USERNAME }}/ll_takehome:latest
          
      - name: Test weather
        run: |
          docker exec -it roman2 curl http://127.0.0.1:80/weather 

      - name: Close container
        run: |
          docker stop roman2

          
